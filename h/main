/* Today - main.h
 *
 * Today - the revised version
 * Originally written by James Miskin
 * Updated for 32-bit by Stephen Fryatt
 */

/* ==================================================================================================================
 * Constant Definitions
 */

#define WIMP_VERSION 310

#define TODAY_PATH_LEN 256
#define MAX_EVENT_LEN 27
#define NUM_OF_WORD_LISTS 4

#define RECORD_STEP 50
#define RECORD_LIMIT 500
#define MIN_TEXT 512
#define TEXT_STEP 512
#define MAX_WORDS_IN_STRING 256

#define UNKNOWN_YEAR (-1000000)

/* ==================================================================================================================
 * Structure Definitions
 */

/* Structure to hold data for a record. */

typedef struct
{
  int year;       /* If year is UNKNOWN_YEAR, it is unknown.                */
  int month;      /* If month is 0 it matches all months; if <0 is unknown. */
  int day;        /* If day is 0 it matches all days; if <0 is unknown.     */
  int type;
  int code;       /* 1-7 for days; 8 for continuous; 0 otherwise.           */
  int startline;
  int endline;
  int fromown;
  int textoff;
}
REC_DATA;


/* Structure to hold information for a list of records. */

typedef struct
{
  ObjectId window;
  ObjectId toolbar;

  int      records;
  int      maxrecords;
  int      toolbarheight;
  int      listdates;     /* listdates flag is nonzero if month and day are to be listed in window. */
  REC_DATA *recorddata;

  char     *text;         /* This block stores all the text for the window.                         */
  int      curoff;
  int      maxoff;
}
WIN_DATA;


/* Structure to hold text strings. */

typedef struct
{
  char str[32];
}
STRING;

/* ==================================================================================================================
 * Function Prototypes
 */

extern int addeventtolist            (WIN_DATA *window);
extern int addnew_event              (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int adjustibar_event          (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int altertypes_event          (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int beginscan                 (void);
extern int button_event              (int event_code, WimpPollBlock *event, IdBlock *id_block,void *handle);
extern int caseinsencmp              (char *str1,char *str2);
extern int checkforcommonword        (REC_DATA *r1,REC_DATA *r2);
extern int cleartext_event           (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int comparerecords            (const void *e1,const void *e2);
extern int comparestrings            (REC_DATA *r1,REC_DATA *r2);
extern int comparewordlist           (const void *e1,const void *e2);
extern int comparewords              (char *str1,char *str2,int verbcheck,int termchar1,int termchar2);
extern int comparewordswiththesaurus (char *str1,int thespos1,char *str2,int thespos2);
extern int object_created_event      (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int createrecwindow           (char *winname,char *toolname,WIN_DATA *win);
extern int delete_event              (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int deleterecord              (int del,int keep);
extern int draggingjoinfile_message  (WimpMessage *message,void *handle);
extern int edit_event                (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int editevent                 (WIN_DATA *win,int flags);
extern int finddayofweek             (int day,int month);
extern int findfontwidths            (void);
extern int findnumber                (ObjectId win,ComponentId ic,int unknown);
extern int findwordinlist            (char *string,int num,int verbcheck,int termchar1,int termchar2);
extern int fixtoolbar                (WIN_DATA *win,char *toolname);
extern int fontchange_message        (WimpMessage *message,void *handle);
extern int highlight_event           (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int joincompare               (const void *e1,const void *e2);
extern int joindata_event            (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int justifywindow             (WIN_DATA *window,int reopen);
extern int loadallevents             (WIN_DATA *joindata,char *path,int filenum,int tempfile,int listnum);
extern int loadeventlist             (MessagesFD *messages,int listnum);
extern int loadheader                (FILE *fileptr,REC_DATA *record,int listnum);
extern int loadlist                  (int num,int numoffiles);
extern int loadlists                 (int numoffiles);
extern int loadnextrecord            (FILE *fileptr,WIN_DATA *window,int filenum,int maximum,int listnum,int tempfile);
extern int main                      (int argc,char *argv[]);
extern int makelistofwords           (REC_DATA *record1,REC_DATA *record2);
extern int makeroomfordata           (WIN_DATA *window,int maximum);
extern int menuquit_event            (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int modechange_message        (WimpMessage *message,void *handle);
extern int movetoendofword           (char *string,int offset);
extern int movetonextline            (FILE *fileptr);
extern int movetonextword            (char *string,int offset);
extern int openadd_event             (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int openingsave_event         (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int parsestring               (char *string);
extern int placetext                 (char *text,int x,int y,int width);
extern int quit_message              (WimpMessage *message,void *handle);
extern int readnextchar              (char *string,int *offset);
extern int readnextinitial           (int num,REC_DATA *record,int *wordnum,int *offset,int *blank);
extern int recinrange                (REC_DATA *record,int year1,int month1,int day1,int year2,int month2,int day2);
extern int redraw_event              (int event_code, WimpPollBlock *event, IdBlock *id_block,void *handle);
extern int redrawlist                (WIN_DATA *window);
extern int reporterror               (char *errortoken,char *str1);
extern int saveallevents             (WIN_DATA *joindata,char *path,int filenum,int tempfile);
extern int savealleventsinduporder   (WIN_DATA *joindata,char *path,int filenum,int tempfile,int *possibleduplicates);
extern int savefile_event            (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int saveoptions_event         (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int saverecord                (FILE *fileptr,REC_DATA *record,WIN_DATA *window);
extern int scan_event                (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int scanfile                  (int filenum);
extern int scantoday_event           (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int search_event              (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int searchmatch               (WIN_DATA *win,REC_DATA *record);
extern int selectall_event           (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int selectibar_event          (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int selectnone_event          (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int set_to_current_date          (ObjectId window,ComponentId day,ComponentId month,ComponentId year);
extern int setuptypemenus            (int oldnumoftypes);
extern int setupwindows              (void);
extern int showingsaveas_event       (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int stringchanged_event       (int event_code, ToolboxEvent *event, IdBlock *id_block,void *handle);
extern int testifcorrectdate         (REC_DATA *record);
extern int wildcardmatch             (char *str1,char *str2,int casesen);
